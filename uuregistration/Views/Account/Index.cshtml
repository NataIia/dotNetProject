@model uuregistration.Models.AllUsersViewModel
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<p>
    @Html.ActionLink("Create New", "Register")
</p>
<div id="GebruikersList">
    <!--partial view, changes with ajax-->
    @Html.Partial("../Gebruikers/GebruikersLijstControl", Model)
</div>

<!--not simple form, but ajax. if load there is action-->
@using (Ajax.BeginForm("Index_Create", new AjaxOptions() { UpdateTargetId = "GebruikersList" })) // GebruikersLijst = to update element by using the response from the server
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">
        <h4>Gebruiker</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => Model.User.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="login">
                @Html.EditorFor(model => Model.User.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.User.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.User.Voornaam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.User.Voornaam, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.User.Voornaam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.User.Achternaam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.User.Achternaam, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.User.Achternaam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.User.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.User.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.User.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.User.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.User.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => Model.User.Departement.departementCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => Model.User.Departement.departementCode, new SelectList(Model.User.Departments, "departementCode", "departementCode"), Model.User.Departement)
            </div>
        </div>
        <!--<div class="form-group">
            Html.LabelFor(model => Model.User.Role, htmlAttributes: new { class = "control-label col-md-2" })
            <div class="col-md-10">
                Html.DropDownListFor(model => Model.User.Role, new SelectList(Model.User.Roles, "Name", "Name"), Model.User.Roles)
            </div>
        </div>-->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section scripts
{
    <script>
        $(document).ready(function () {
            // Disable submit button on load
            $('#submit').prop('disabled', true);
            // Keep submit button disabled if fields are empty
            $(".form-control").keyup(function () {
                $('#submit').prop('disabled', $(".form-control").val() == "" ? true : false);
            });
        });
    </script>
}

